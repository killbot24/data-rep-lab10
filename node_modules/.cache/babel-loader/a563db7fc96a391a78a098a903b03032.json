{"ast":null,"code":"import _classCallCheck from\"C:/Users/tjbur/Documents/GitHub/data-rep-lab10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/tjbur/Documents/GitHub/data-rep-lab10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/tjbur/Documents/GitHub/data-rep-lab10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/tjbur/Documents/GitHub/data-rep-lab10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/tjbur/Documents/GitHub/data-rep-lab10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Movies}from'./movies';import axios,{Axios}from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Read=/*#__PURE__*/function(_React$Component){_inherits(Read,_React$Component);var _super=_createSuper(Read);//Returns below text when called\nfunction Read(){var _this;_classCallCheck(this,Read);_this=_super.call(this);_this.state={movies:[]};_this.ReloadData=_this.ReloadData.bind(_assertThisInitialized(_this));return _this;}_createClass(Read,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get('http://localhost:4000/api/movies')//Pulls from server\n.then(function(response){_this2.setState({movies:response.data});}).catch(function(error){console.log(error);});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"This is the read Component\"}),/*#__PURE__*/_jsx(Movies,{movies:this.state.movies,ReloadData:this.ReloadData})]})// Runs movies.js that then runs movieitem that for each new movie creates a card and fills in needed info\n;}},{key:\"ReloadData\",value:function ReloadData(){var _this3=this;//Reloads data\naxios.get('http://localhost:4000/api/movies')//Pulls from server\n.then(function(response){_this3.setState({movies:response.data});}).catch(function(error){console.log(error);});}}]);return Read;}(React.Component);","map":{"version":3,"sources":["C:/Users/tjbur/Documents/GitHub/data-rep-lab10/src/componets/read.js"],"names":["React","Movies","axios","Axios","Read","state","movies","ReloadData","bind","get","then","response","setState","data","catch","error","console","log","Component"],"mappings":"yzBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,KAAhB,KAA6B,OAA7B,C,wFACA,UAAaC,CAAAA,IAAb,wGAA2C;AACvC,eAAa,sCACT,wBADS,MAIbC,KAJa,CAIL,CACJC,MAAM,CAAE,EADJ,CAJK,CAET,MAAKC,UAAL,CAAgB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAhB,CAFS,aAGZ,CAJL,kDASI,4BAAoB,iBAChBN,KAAK,CAACO,GAAN,CAAU,kCAAV,CAA6C;AAA7C,CACKC,IADL,CAEQ,SAACC,QAAD,CAAc,CACV,MAAI,CAACC,QAAL,CAAc,CAAEN,MAAM,CAAEK,QAAQ,CAACE,IAAnB,CAAd,EACH,CAJT,EAKKC,KALL,CAMQ,SAACC,KAAD,CAAW,CAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAoB,CANzC,EASH,CAnBL,sBAoBI,iBAAS,CACL,mBACI,oCACI,kDADJ,cAEI,KAAC,MAAD,EAAQ,MAAM,CAAE,KAAKV,KAAL,CAAWC,MAA3B,CAAmC,UAAU,CAAE,KAAKC,UAApD,EAFJ,GAKA;AANJ,CAQH,CA7BL,0BA8BI,qBAAY,iBAAC;AACTL,KAAK,CAACO,GAAN,CAAU,kCAAV,CAA6C;AAA7C,CACCC,IADD,CAEI,SAACC,QAAD,CAAc,CACV,MAAI,CAACC,QAAL,CAAc,CAAEN,MAAM,CAAEK,QAAQ,CAACE,IAAnB,CAAd,EACH,CAJL,EAKCC,KALD,CAMI,SAACC,KAAD,CAAW,CAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAoB,CANrC,EAQH,CAvCL,kBAA0Bf,KAAK,CAACkB,SAAhC","sourcesContent":["import React from 'react';\r\nimport { Movies } from './movies';\r\nimport axios, { Axios } from 'axios'\r\nexport class Read extends React.Component {//Returns below text when called\r\n    constructor(){\r\n        super();\r\n        this.ReloadData=this.ReloadData.bind(this);\r\n    }\r\n    state = {\r\n        movies: []\r\n\r\n    };\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/api/movies')//Pulls from server\r\n            .then(\r\n                (response) => {\r\n                    this.setState({ movies: response.data})\r\n                })\r\n            .catch(\r\n                (error) => { console.log(error) }\r\n            )\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>This is the read Component</h1>\r\n                <Movies movies={this.state.movies} ReloadData={this.ReloadData}></Movies>\r\n\r\n            </div>\r\n            // Runs movies.js that then runs movieitem that for each new movie creates a card and fills in needed info\r\n        );\r\n    }\r\n    ReloadData(){//Reloads data\r\n        axios.get('http://localhost:4000/api/movies')//Pulls from server\r\n        .then(\r\n            (response) => {\r\n                this.setState({ movies: response.data})\r\n            })\r\n        .catch(\r\n            (error) => { console.log(error) }\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}